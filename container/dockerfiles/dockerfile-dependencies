# Copyright (c) 2022 Alexander Williams <alexwilliams@protonmail.ch>
# SPDX-License-Identifier: LicenseRef-MIT-Alex

# add docker commands to this file to install project specific dependencies
# in the container

FROM dockerfile-python as dockerfile-dependencies

# build arrayfire
# see the following for help with building arrayfire:
# https://github.com/arrayfire/arrayfire-docker
# https://github.com/arrayfire/arrayfire/wiki/Build-Instructions-for-Linux

# dependencies of arrayfire
RUN apt-get install -y libboost-all-dev
RUN apt-get install -y libfreeimage-dev
RUN apt-get install -y libopenblas-dev libfftw3-dev liblapack-dev liblapacke-dev

# set up symlinks for libcuda
RUN ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/lib/libcuda.so.1
RUN ln -s /usr/lib/libcuda.so.1 /usr/lib/libcuda.so
RUN echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf
RUN echo "/usr/local/nvidia/lib64" >> /etc/ld.so.conf.d/nvidia.conf
ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}

# install intel mkl
# WORKDIR /tmp
# RUN wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
# RUN apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
# RUN echo "deb https://apt.repos.intel.com/oneapi all main" | tee /etc/apt/sources.list.d/oneAPI.list
# RUN add-apt-repository "deb https://apt.repos.intel.com/oneapi all main" 
# RUN apt update -y && apt install -y intel-basekit

# build arrayfire
WORKDIR /tmp
# AF_DISABLE_GRAPHICS - Environment variable to disable graphics at
# runtime due to lack of graphics support by docker - visit
# http://arrayfire.org/docs/configuring_environment.htm#af_disable_graphics
# for more information
ENV AF_PATH=/opt/arrayfire AF_DISABLE_GRAPHICS=1
ARG COMPILE_GRAPHICS=OFF
RUN git clone --recursive https://github.com/arrayfire/arrayfire.git
WORKDIR /tmp/arrayfire
RUN git checkout v3.8.2
RUN git submodule sync
RUN git submodule update --init --recursive --jobs 0
RUN mkdir build
WORKDIR /tmp/arrayfire/build
# RUN . /opt/intel/oneapi/setvars.sh && \
RUN    cmake .. -DCMAKE_INSTALL_PREFIX=/opt/arrayfire-3 \
             -DCMAKE_BUILD_TYPE=Release \
             -DAF_BUILD_CPU=ON \
             -DAF_BUILD_CUDA=ON \
             -DAF_BUILD_DOCS=OFF \
             -DAF_BUILD_EXAMPLES=OFF \
             -DAF_BUILD_OPENCL=OFF \
             -DAF_BUILD_UNIFIED=ON \
             -DAF_COMPUTE_LIBRARY=BLAS \
             -DCUDA_architecture_build_targets=8.6 \
             -DCMAKE_EXE_LINKER_FLAGS="-B=mold" # for gcc-12: "-fuse-ld=mold"
RUN make -j$(nproc)
RUN make -j$(nproc) install
RUN mkdir -p ${AF_PATH}
RUN ln -s /opt/arrayfire-3/* ${AF_PATH}/
RUN echo "${AF_PATH}/lib" >> /etc/ld.so.conf.d/arrayfire.conf
RUN echo "/usr/local/cuda/nvvm/lib64" >> /etc/ld.so.conf.d/arrayfire.conf
RUN ldconfig

WORKDIR /
